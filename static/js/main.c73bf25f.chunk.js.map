{"version":3,"sources":["index.js","useMapbox.js"],"names":["App","useState","Math","random","setRandom","mapContainer","useRef","map","lng","setLng","lat","setLat","zoom","setZoom","container","mapboxgl","accessToken","useEffect","current","console","log","Map","style","center","marker","Marker","setLngLat","addTo","remove","useMapbox","on","getCenter","toFixed","getZoom","id","onClick","ref","className","render","document","querySelector"],"mappings":"4JAIA,SAASA,IAAO,IAAD,EACiBC,mBAASC,KAAKC,UAD/B,mBACIC,GADJ,WAELC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MAHR,EAIWL,mBAAS,SAJpB,mBAIJO,EAJI,KAICC,EAJD,OAKWR,mBAAS,SALpB,mBAKJS,EALI,KAKCC,EALD,OAMaV,mBAAS,GANtB,mBAMJW,EANI,KAMEC,EANF,KAmBX,OCpBW,SAAmBN,EAAKO,EAAWN,EAAKE,EAAKE,GAExDG,IAASC,YACL,2FACJC,qBAAU,WACFV,EAAIW,UACMN,GACVO,QAAQC,IAAI,cACZb,EAAIW,QAAU,IAAIH,IAASM,IAAI,CAC3BP,UAAWA,EAAUI,QACrBI,MAAO,kCACPC,OAAQ,CAACf,EAAKE,GACdE,KAAMA,KAGVL,EAAIW,QAAU,IAAIH,IAASM,IAAI,CAC3BP,UAAWA,EAAUI,QACrBI,MAAO,kCACPC,OAAQ,CAAC,QAAS,SAClBX,KAAM,QAKlBK,qBAAU,WACN,GAAcL,EAAM,CAChB,IAAMY,GAAS,IAAIT,IAASU,QACvBC,UAAU,CAAClB,EAAKE,IAChBiB,MAAMpB,EAAIW,SACf,OAAO,kBAAMM,EAAOI,UAEpB,IAAMJ,GAAS,IAAIT,IAASU,QACvBC,UAAU,CAAC,QAAS,UACpBC,MAAMpB,EAAIW,SACf,OAAO,kBAAMM,EAAOI,aDzB5BC,CAAUtB,EAAKF,EAAcG,EAAKE,EAAKE,GAEvCK,qBAAU,WACDV,EAAIW,SACTX,EAAIW,QAAQY,GAAG,QAAQ,WACnBrB,EAAOF,EAAIW,QAAQa,YAAYvB,IAAIwB,QAAQ,IAC3CrB,EAAOJ,EAAIW,QAAQa,YAAYrB,IAAIsB,QAAQ,IAC3CnB,EAAQN,EAAIW,QAAQe,UAAUD,QAAQ,UAK1C,qCACI,wBAAQE,GAAG,WAAWC,QAAS,kBAAM/B,EAAUF,KAAKC,WAApD,+DAGA,qBAAKiC,IAAK/B,EAAc6B,GAAG,MAA3B,SACI,sBAAKG,UAAU,UAAf,wBACgB7B,EADhB,gBACkCE,EADlC,YACgDE,UAOhE0B,iBAAO,cAACtC,EAAD,IAAQuC,SAASC,cAAc,Y","file":"static/js/main.c73bf25f.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {render} from \"react-dom\";\nimport useMapbox from \"./useMapbox.js\"\n\nfunction App() {\n    const [random, setRandom] = useState(Math.random());\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng, setLng] = useState(55.7558);\n    const [lat, setLat] = useState(37.6173);\n    const [zoom, setZoom] = useState(9);\n\n    useMapbox(map, mapContainer, lng, lat, zoom)\n\n    useEffect(() => {\n        if (!map.current) return;\n        map.current.on('move', () => {\n            setLng(map.current.getCenter().lng.toFixed(4));\n            setLat(map.current.getCenter().lat.toFixed(4));\n            setZoom(map.current.getZoom().toFixed(2));\n        });\n    });\n\n    return (\n        <>\n            <button id=\"rerender\" onClick={() => setRandom(Math.random())}>\n                Ререндер!\n            </button>\n            <div ref={mapContainer} id=\"map\">\n                <div className=\"sidebar\">\n                    Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n                </div>\n            </div>\n        </>\n    );\n}\n\nrender(<App/>, document.querySelector(\"#root\"));\n","import {useEffect} from \"react\"\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nexport default function useMapbox(map, container, lng, lat, zoom) {\n\n    mapboxgl.accessToken =\n        \"pk.eyJ1IjoiZXJib3JnIiwiYSI6ImNrb2Q0b21nZDFob3oyb3FtdHNjNzgxbGUifQ.hEsH0NC3rOAEIXAtg14rwA\";\n    useEffect(() => {\n        if (map.current) return;\n        if (lng, lat, zoom) {\n            console.log('use normal')\n            map.current = new mapboxgl.Map({\n                container: container.current,\n                style: 'mapbox://styles/mapbox/dark-v10',\n                center: [lng, lat],\n                zoom: zoom\n            });\n        } else {\n            map.current = new mapboxgl.Map({\n                container: container.current,\n                style: 'mapbox://styles/mapbox/dark-v10',\n                center: [55.7558, 37.6173],\n                zoom: 9\n            });\n        }\n    });\n\n    useEffect(() => {\n        if (lng, lat, zoom) {\n            const marker = new mapboxgl.Marker()\n                .setLngLat([lng, lat])\n                .addTo(map.current)\n            return () => marker.remove();\n        } else {\n            const marker = new mapboxgl.Marker()\n                .setLngLat([55.7558, 37.6173])\n                .addTo(map.current)\n            return () => marker.remove();\n        }\n    });\n\n}"],"sourceRoot":""}