{"version":3,"sources":["index.js"],"names":["App","useState","Math","random","setRandom","mapContainer","useRef","map","lng","setLng","lat","setLat","zoom","setZoom","mapboxgl","accessToken","useEffect","current","Map","container","style","center","marker","Marker","setLngLat","addTo","remove","on","getCenter","toFixed","getZoom","id","onClick","ref","className","render","document","querySelector"],"mappings":"uJAIA,SAASA,IAAO,IAAD,EACiBC,mBAASC,KAAKC,UAD/B,mBACIC,GADJ,WAELC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MAHR,EAIWL,mBAAS,SAJpB,mBAIJO,EAJI,KAICC,EAJD,OAKWR,mBAAS,SALpB,mBAKJS,EALI,KAKCC,EALD,OAMaV,mBAAS,GANtB,mBAMJW,EANI,KAMEC,EANF,KAoCX,OA7BAC,IAASC,YACL,2FAEJC,qBAAU,WACFT,EAAIU,UACRV,EAAIU,QAAU,IAAIH,IAASI,IAAI,CAC3BC,UAAWd,EAAaY,QACxBG,MAAO,kCACPC,OAAQ,CAACb,EAAKE,GACdE,KAAMA,QAIdI,qBAAU,WACN,IAAMM,GAAS,IAAIR,IAASS,QACvBC,UAAU,CAAChB,EAAKE,IAChBe,MAAMlB,EAAIU,SACf,OAAO,kBAAMK,EAAOI,aAGxBV,qBAAU,WACDT,EAAIU,SACTV,EAAIU,QAAQU,GAAG,QAAQ,WACnBlB,EAAOF,EAAIU,QAAQW,YAAYpB,IAAIqB,QAAQ,IAC3ClB,EAAOJ,EAAIU,QAAQW,YAAYlB,IAAImB,QAAQ,IAC3ChB,EAAQN,EAAIU,QAAQa,UAAUD,QAAQ,UAK1C,qCACI,wBAAQE,GAAG,WAAWC,QAAS,kBAAM5B,EAAUF,KAAKC,WAApD,+DAGA,qBAAK8B,IAAK5B,EAAc0B,GAAG,MAA3B,SACI,sBAAKG,UAAU,UAAf,wBACgB1B,EADhB,gBACkCE,EADlC,YACgDE,UAOhEuB,iBAAO,cAACnC,EAAD,IAAQoC,SAASC,cAAc,Y","file":"static/js/main.1ce8939c.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {render} from \"react-dom\";\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nfunction App() {\n    const [random, setRandom] = useState(Math.random());\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng, setLng] = useState(55.7558);\n    const [lat, setLat] = useState(37.6173);\n    const [zoom, setZoom] = useState(9);\n    mapboxgl.accessToken =\n        \"pk.eyJ1IjoiZXJib3JnIiwiYSI6ImNrb2Q0b21nZDFob3oyb3FtdHNjNzgxbGUifQ.hEsH0NC3rOAEIXAtg14rwA\";\n\n    useEffect(() => {\n        if (map.current) return;\n        map.current = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/dark-v10',\n            center: [lng, lat],\n            zoom: zoom\n        });\n    });\n\n    useEffect(() => {\n        const marker = new mapboxgl.Marker()\n            .setLngLat([lng, lat])\n            .addTo(map.current)\n        return () => marker.remove();\n    });\n\n    useEffect(() => {\n        if (!map.current) return;\n        map.current.on('move', () => {\n            setLng(map.current.getCenter().lng.toFixed(4));\n            setLat(map.current.getCenter().lat.toFixed(4));\n            setZoom(map.current.getZoom().toFixed(2));\n        });\n    });\n\n    return (\n        <>\n            <button id=\"rerender\" onClick={() => setRandom(Math.random())}>\n                Ререндер!\n            </button>\n            <div ref={mapContainer} id=\"map\">\n                <div className=\"sidebar\">\n                    Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n                </div>\n            </div>\n        </>\n    );\n}\n\nrender(<App/>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}